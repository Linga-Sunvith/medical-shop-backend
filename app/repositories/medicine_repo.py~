# app/repositories/medicine_repo.py
from sqlalchemy.orm import Session
from sqlalchemy import or_
from app.models.models import Medicine
import logging

logger = logging.getLogger("medical-shop-backend")

def get_filtered_medicines(db: Session, search_query: str = None, skip: int = 0, limit: int = 10):
    query = db.query(Medicine)
    if search_query:
        query = query.filter(
            or_(
                Medicine.name.ilike(f"%{search_query}%"),
                Medicine.formula.ilike(f"%{search_query}%"),
                Medicine.purpose.ilike(f"%{search_query}%")
            )
        )
    return query.offset(skip).limit(limit).all()

def create_medicine(db: Session, medicine: Medicine):
    db.add(medicine)
    db.commit()
    db.refresh(medicine)
    return medicine

def update_medicine(db: Session, medicine_id: int, updated_data: dict):
    db_medicine = db.query(Medicine).filter(Medicine.id == medicine_id).first()
    if not db_medicine:
        return None
    for key, value in updated_data.items():
        setattr(db_medicine, key, value)
    db.commit()
    db.refresh(db_medicine)
    return db_medicine

def delete_medicine(db: Session, medicine_id: int):
    db_medicine = db.query(Medicine).filter(Medicine.id == medicine_id).first()
    if db_medicine:
        db.delete(db_medicine)
        db.commit()
    return db_medicine
